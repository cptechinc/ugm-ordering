$(function() {
	var modalAjax = $('#ajax-modal');
	var customer = {{ editm.get_customer_js()|json_encode()|raw }};
	var shiptos  = {{ editm.get_shiptos_js()|json_encode()|raw }};
	var form = $('#order-form');

/* =============================================================
	Event Functions
============================================================= */
	$("body").on('change', 'select[name=shiptoid]', function(e) {
		var select = $(this);
		var shiptoid = select.val();
		fillout_shipto_fields(shiptoid);
	});

	$('.placard.placard-qty').on('shown.fu.placard', function () {
		var placard = $(this);
		var qty = placard.find('input[name=qty]').attr('data-qty');
		placard.find('.placard-header').find('.qty').text(': ' + qty);
	});

/* =============================================================
	Ajax Modal Functions
============================================================= */
	modalAjax.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal = $(this);

		modal.attr('data-input', button.data('input'));
		modal.find('.modal-title').text(button.attr('title'));
		modal.resizeModal('xl');
		modal.find('.modal-body').loadin(button.data('lookupurl'), function() {});
	});

	$("body").on('click', '.item-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));

		input.val(button.data('itemid'));
		modal.modal('hide');
	});

	$("body").on('submit', '#ajax-modal form.item-search', function(e) {
		e.preventDefault();
		var form = $(this);
		var query  = form.serialize();
		var action = form.attr('action');
		var search = form.find('input[name=q]').val();
		var url = action + '?' + query;
		form.closest('.modal').find('.modal-title').text('Searching for ' + search);
		form.closest('.modal').find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '#ajax-modal .paginator-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		modal.find('.modal-body').load(button.attr('href'));
	});

/* =============================================================
	Unsaved Fields Alert
============================================================= */
	origForm = form.serialize();

	$("body").on("click", "a:not(#order-form a, #ajax-modal a)", function(e) {
		if (form.serialize() !== origForm) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			swal2.fire({
				title: 'You have unsaved changes!',
				text: 'Do you want to save?',
				icon: 'warning',
				showCancelButton: true,
				confirmButtonText: '<i class="fa fa-floppy-o" aria-hidden="true"></i> Yes',
				cancelButtonText: 'No',
			}).then((result) => {
				if (result.value) {
					form.find('button[type=submit]').click();
				} else if (result.dismiss === Swal.DismissReason.cancel) {
					window.location.href = href;
				}
			});
		}
	});

/* =============================================================
	Validation Functions
============================================================= */
	jQuery.validator.addMethod("ponbr", function(value, element) {
		return validate_require_ponbr(value);
	}, "PO number is required");

	form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			var jq = $(element);

			if (jq.closest('.input-group').length) {
				var parent = jq.closest('.input-group');
				error.insertAfter(parent).addClass('invalid-feedback');
			} else {
				error.insertAfter(element).addClass('invalid-feedback');
			}
		},
		rules: {
			custpo: { ponbr: true },
		},
		messages: {
		},
		submitHandler: function(form) {
			form.submit();
		}
	});

	function validate_require_ponbr(ponbr) {
		var required = false;
		var input_shiptoid = form.find('input[name=shiptoid]');

		if (input_shiptoid.val()) {
			required = shiptos[input_shiptoid.val()]['require_po'];
		}
		required = customer.require_po;
		return required ? false : true;
	}
/* =============================================================
	Supplemental Functions
============================================================= */

	function fillout_shipto_fields(shiptoid) {
		var shipto = new Shipto();

		if (shiptoid in shiptos) {
			shipto = get_shiptodata(shipto, shiptoid);

		}
		//form.find('input[name=sconame]').val(shipto.name);
		form.find('input[name=shipname]').val(shipto.name);
		form.find('input[name=shipaddress]').val(shipto.address1);
		form.find('input[name=shipaddress2]').val(shipto.address2);
		form.find('input[name=shipcity]').val(shipto.city);
		form.find('select[name=shipstate]').val(shipto.state);
		form.find('input[name=shipzip]').val(shipto.zip);
	}

	function get_shiptodata(shipto, shiptoid) {
		var shipto_data = shiptos[shiptoid];
		shipto.id = shipto_data.shiptoid;
		shipto.name     = shipto_data.name;
		shipto.address1 = shipto_data.address1;
		shipto.address2 = shipto_data.address2;
		shipto.contact  = shipto_data.contact;
		shipto.city     = shipto_data.city;
		shipto.state    = shipto_data.state;
		shipto.zip      = shipto_data.zip;
		return shipto;
	}

	function Shipto() {
		this.id       = '';
		this.name     = '';
		this.address1 = '';
		this.address2 = '';
		this.contact  = '';
		this.city     = '';
		this.state    = '';
		this.zip      = '';
	}

});
