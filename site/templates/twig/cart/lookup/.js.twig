{% include 'cart/lookup/js/classes.js.twig' %}

$(function() {
	var modalAjax = $('#ajax-modal');
	var form_additem = $('#add-item-form');
	var input_itemid = form_additem.find('input[name=itemID]');
	var input_qty = form_additem.find('input[name=qty]');
	var div_results = $('#lookup-results');

	var formAdd = Form.getInstance();

/* =============================================================
	Lookup Modal Functions
============================================================= */
	$("body").on('change', '#add-item-form input[name=itemID]', function(e) {
		e.preventDefault();

		formAdd.updateItemFields();
	});

	$("body").on('click', '#lookup-results .paginator-link', function(e) {
		e.preventDefault();
		var href = $(this).attr('href');
		div_results.loadin(href, function() {

		});
	});

/* =============================================================
	Ajax Modal Functions
============================================================= */
	modalAjax.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal = $(this);

		modal.attr('data-input', button.data('input'));
		modal.find('.modal-title').text(button.attr('title'));
		modal.resizeModal('xl');
		modal.find('.modal-body').loadin(button.data('lookupurl'), function() {});
	});


	$("body").on('click', '.item-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));

		input.val(button.data('itemid'));
		modal.modal('hide');
	});

	$("body").on('submit', '#ajax-modal form.item-search', function(e) {
		e.preventDefault();
		var form = $(this);
		var query  = form.serialize();
		var action = form.attr('action');
		var search = form.find('input[name=q]').val();
		var url = action + '?' + query;
		form.closest('.modal').find('.modal-title').text('Searching for ' + search);
		form.closest('.modal').find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '#ajax-modal .paginator-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		modal.find('.modal-body').load(button.attr('href'));
	});

	$("body").on('submit', '#ajax-modal form.add-lot-form', function(e) {
		e.preventDefault();
		var form = $(this);
		var data = form.formData();
		var ajax = new AjaxRequest('{{ page.jsonApiUrl('cart') }}');
		ajax.setMethod('POST');
		ajax.setData(data);
		ajax.request(function(response) {
			if (response.error === false) {
				var card = $('#ajax-modal').find('[data-lot="' + data.lot + '"]');
				card.find('.cart-qty').text(response.lot.qtyincart);
				var uri = URI();
				$('#cart').loadin(uri.toString()+'#cart', function() {

				});
			}

			$.notify({
				// options
				title: response.error === false ? 'Success!' : 'Error!',
				message: response.message,
				icon: 'fa fa-shopping-cart',
			},{
			// settings
				type: response.error === false ? 'success' : 'danger',
				delay: 4000,
				showProgressbar: true,
				z_index: 1051,
			});
		});
	});


/* =============================================================
	Validation Functions
============================================================= */
	form_additem.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			addqty: {required: true},
			itemID: {
				required: true,
				remote: {
					url: '{{ page.jsonApiUrl('items/validate/itemid/') }}',
					type: "get",
					data: {
						jqv: 'true'
					}
				}
			}
		},
		submitHandler: function(form) {
			form.submit();
		}
	});

});
