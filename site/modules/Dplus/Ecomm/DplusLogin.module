<?php namespace ProcessWire;

use Purl\Url;

use LoginQuery, Login;

use CustomerQuery, Customer;

include_once(__DIR__.'/../DplusResponse.php');

/**
 * Handles the Login Functionality, sends Login Requests to Dplus
 */
class DplusLogin extends WireData implements Module {

/* =============================================================
	CRUD Processing Functions
============================================================= */
	/**
	 * Process Input, call function that corresponds with action
	 * @param  WireInput $input
	 * @param  User      $user
	 * @return void
	 */
	public function process_input(WireInput $input, User $user) {
		$rm = strtolower($input->requestMethod());
		$values = $input->$rm;

		if ($values->action) {
			switch ($values->text('action')) {
				case 'logout':
					if ($user->isLoggedInDplus()) {
						$this->request_logout();
					}
					break;
				case 'login':
					$this->login_input($input, $user);
					break;
			}
		} else {
			$this->wire('session')->response_login = DplusResponse::create_error("No Login Action provided");
		}
	}

	/**
	 * Processes Input For Login Request
	 * @param  WireInput $input
	 * @param  User      $user
	 * @return void
	 */
	public function login_input(WireInput $input, User $user) {
		$rm = strtolower($input->requestMethod());
		$values = $input->$rm;
		$response = new DplusResponse();

		if ($values->email) {
			$this->request_login($values->text('email'), $values->text('password'));

			if ($user->isLoggedInDplus()) {
				$response->set_success(true);
			} else {
				$response->set_error(true);
				$response->set_message("Invalid Email / Password");
			}
		} else {
			$response->set_error(true);
			$response->set_message("Unable to Log in");
		}
		$this->wire('session')->response_login = $response;
	}

/* =============================================================
	Dplus Cobol Request Functions
============================================================= */
	/**
	 * Send Login Request
	 * @param  string $email    User Email
	 * @param  string $password User Password
	 * @return void
	 */
	protected function request_login($email, $password) {
		$dplusdb = $this->wire('modules')->get('DplusDatabaseDpluso')->db_name;
		$data = array("DBNAME=$dplusdb", "LOGIN=$email", "PSWD=$password");
		$requestor = $this->wire('modules')->get('DplusRequest');
		$requestor->write_dplusfile($data, session_id());
		$requestor->cgi_request($this->wire('config')->cgis['default'], session_id());
	}

	/**
	 * Send Logout Request
	 * @return void
	 */
	protected function request_logout() {
		$dplusdb = $this->wire('modules')->get('DplusDatabaseDpluso')->db_name;
		$data = array("DBNAME=$dplusdb", 'LOGOUT');
		$requestor = $this->wire('modules')->get('DplusRequest');
		$requestor->write_dplusfile($data, session_id());
		$requestor->cgi_request($this->wire('config')->cgis['default'], session_id());
	}

/* =============================================================
	Accessory Functions
============================================================= */
	/**
	 * Return Login Record for this Session
	 * @return Login
	 */
	public function get_loginrecord() {
		$q = LoginQuery::create();
		$record = $q->filterBySessionid(session_id())->findOneOrCreate();
		return $record;
	}

	/**
	 * Sets User Properties based on Login Record
	 * @param  User   $user User
	 * @return void
	 */
	public function init_user(User $user) {
		$loginrecord    = $this->get_loginrecord();
		$user->user     = $loginrecord->contact;
		$user->email    = $loginrecord->email;
		$user->custid   = $loginrecord->custid;
		$user->shiptoid = $loginrecord->shiptoid;
		$user->customer = $this->get_user_customer($user);
	}

	/**
	 * Return User's Customer
	 * @param  User     $user
	 * @return Customer
	 */
	public function get_user_customer(User $user) {
		return CustomerQuery::create()->findOneByCustid($user->custid);
	}

/* =============================================================
	ProcessWire Module Functions
============================================================= */
	/**
	 * ProcessWire Module Info
	 *
	 * @return void
	 */
	public static function getModuleInfo() {
		return array(
			'title' => 'Ecomm Login Module',
			'version' => 101,
			'summary' => 'Handles Logging into Dplus Ecomm',
			'singular' => true,
			'autoload' => true,
		);
	}

	public function init() {
		$this->addHook('User::isLoggedInDplus', function($event) {
			$user = $event->object;
			$loginrecord = $this->get_loginrecord();
			$event->return = $loginrecord->is_loggedin();
		});

		$this->addHook('User::setup', function($event) {
			$user = $event->object;
			$this->init_user($user);
		});
	}
}
